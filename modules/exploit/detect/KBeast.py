#!/usr/bin/python3

"""
Part of SubZero project: 
Written by David SORIA (Sibwara, dsoria@astar.org) in 2020
Do not sell in a commercial package
"""

import argparse
import subprocess
from netaddr import IPNetwork
from threading import Thread, RLock

"""
        with lock:
            global PROGRESS
            global TOTAL
            PROGRESS += 1
            print(f"[+] {self.ip}:{self.port} brute finished")
            print(f"[*] Progress: {PROGRESS}/{TOTAL}")
"""

class Wmiexec(Thread):

    def __init__(self, ip, login, password, domain):
        Thread.__init__(self)
        self.ip = ip
        self.login = login
        self.passw = password
        self.dom = domain

    def run(self):
        self.systeminfo()

    def systeminfo(self):
        try:
            result = subprocess.run(['winexe', "-U", f"{self.dom}/{self.login}%{self.passw}", f"//{self.ip}", "cmd.exe /c systeminfo"], capture_output=True, timeout = 10)
        except Exception as e:
            return
        if len(result.stdout) != 0:
            f = open(f"{self.ip}_systeminfo", "wb")
            f.write(result.stdout)
            f.close()
 

def get_systeminfo(targets, login, password, dom):
    threads = []
    # for each host
    for ip in IPNetwork(targets):
        print(f"[*] Get systeminfo from {ip} ...")
        threads.append(Wmiexec(ip, login, password, dom))   
    for t in threads:
        t.start()
    for t2 in threads:
        t2.join()

def main():
    parser = argparse.ArgumentParser(description='Check KB installed and check exploit available for the missing ones', add_help=True)
    parser.add_argument('TARGET', action="store",  
            help='An IP address or a CIDR')
    parser.add_argument('-w', action="store", dest="path",
            help="The path to store the results. Default is '.'")   
    parser.add_argument('-u', action="store", dest="login",
            help="Username")
    parser.add_argument('-p', action="store", dest="password",
            help="Password")
    parser.add_argument('-d', action="store", dest="dom",
            help="Dom")
    args = parser.parse_args()

    get_systeminfo(args.TARGET, args.login, args.password, args.dom)


if __name__ == '__main__':
    main()
